{"version":3,"sources":["common/Container.js","common/Button.js","Player.js","common/Dialog.js","common/Input.js","common/ColorPicker.js","PlayerForm.js","Catergories.js","Timer.js","common/Badge.js","Question.js","common/useSessionStorage.js","common/RadioGroup.js","Settings.js","Game.js","App.js","schema.js","serviceWorker.js","index.js"],"names":["Title","children","className","Container","centered","rounded","dark","props","classNames","Button","variant","classes","Avatar","styled","color","Root","div","selected","Name","p","Player","name","onClick","useState","score","setScore","useEffect","Mousetrap","bind","unbind","Overlay","Content","noop","Dialog","isOpen","onClose","onOpen","Input","React","forwardRef","ref","for","id","colors","Tile","value","ColorPicker","onChange","activeIndex","setActiveIndex","focused","setFocus","target","length","tabIndex","onFocus","onBlur","map","i","Form","form","ButtonGroup","PlayerForm","onCancel","onSubmit","values","setValue","updateValue","ev","preventDefault","maxLength","autoFocus","type","CATEGORIES","Label","index","indexOf","s1","slice","s2","s3","Catergories","key","to","Timer","startTime","useRef","Date","now","time","setTime","buffer","useMemo","animate","dt","current","requestAnimationFrame","minutes","getMinutes","seconds","getSeconds","mPrefix","sPrefix","width","Badge","GET","gql","QuestionCard","Choices","visibility","Text","mergeQuestions","prev","fetchMoreResult","questions","labels","boolean","multiple","Question","difficulty","token","variables","amount","category","useParams","useQuery","fetchPolicy","data","loading","state","setState","choicesVisibility","setChoicesVisibility","question","get","answer","incorrectAnswers","choices","shuffle","history","useHistory","ent","decode","choice","toString","goBack","useSessionStorage","initialValue","string","sessionStorage","getItem","json","JSON","parse","e","console","log","stringify","setItem","RadioGroup","options","option","class","checked","label","Settings","onSave","setDifficulty","setType","Sidebar","Players","Game","selectedPlayer","selectPlayer","dialogId","setDialogId","players","setPlayers","settings","setSettings","player","path","exact","component","Categories","render","link","RestLink","uri","responseTransformer","response","results","cache","InMemoryCache","dataIdFromObject","object","__typename","uuid","client","ApolloClient","connectToDevTools","typeDefs","App","GA","pageview","Boolean","window","location","hostname","match","initialize","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f8939764.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Container = ({ children, className, centered, rounded, dark, ...props }) => {\n  className = classNames([\n    className,\n    \"nes-container\",\n    \"with-title\",\n    { \"is-dark\": dark },\n    { \"is-centered\": centered },\n    { \"is-rounded\": rounded },\n  ]);\n  return (\n    <div className={className} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport const Title = ({ children }) => <p className=\"title\">{children}</p>;\n\nexport default Container;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Button = ({ children, className, variant = \"\", ...props }) => {\n  const classes = classNames([className, \"nes-btn\", `is-${variant}`]);\n  return <button className={classes} {...props}>{children}</button>;\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Mousetrap from \"mousetrap\";\nimport Container from \"./common/Container\";\n\nconst Avatar = styled(Container)`\n  background: blue;\n  background-color: ${props => props.color || \"black\"};\n  padding: 0.25em 0.75em;\n`;\n\nconst Root = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 4px;\n  background: ${props => (props.selected ? \"black\" : \"none\")};\n  color: ${props => (props.selected ? \"white\" : \"black\")};\n`;\n\nconst Name = styled.p`\n  flex: 1;\n  font-size: 10pt;\n  text-align: left;\n  margin-left: 8px;\n  margin-bottom: 0;\n`;\n\nconst Player = ({ className, name, color, onClick, selected }) => {\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    if (selected) {\n      Mousetrap.bind(\"right\", () => setScore(score + 1));\n      Mousetrap.bind(\"left\", () => setScore(score - 1));\n    }\n    return () => {\n      if (!selected) {\n        Mousetrap.unbind(\"right\");\n        Mousetrap.unbind(\"left\");\n      }\n    };\n  }, [selected, score]);\n  return (\n    <Root className={className} selected={selected} onClick={onClick}>\n      <Avatar color={color}>{score}</Avatar>\n      <Name>{name}</Name>\n    </Root>\n  );\n};\n\nexport default Player;\n","import React, { useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Container from \"./Container\";\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Content = styled(Container)`\n  background: white;\n  min-width: 400px;\n  min-height: 200px;\n`;\n\nconst noop = () => undefined;\nconst Dialog = ({ children, isOpen, onClose = noop, onOpen = noop }) => {\n  useEffect(() => {\n    onOpen();\n    return () => onClose();\n  }, []);\n  return isOpen ? (\n    <Overlay>\n      <Content>{children}</Content>\n    </Overlay>\n  ) : null;\n};\n\nexport default Dialog;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Input = React.forwardRef(({ className, name, ...props }, ref) => {\n  const classes = classNames([className, \"nes-field\"]);\n  return (\n    <div className={classes}>\n      <label for={name}>Your name</label>\n      <input\n        className=\"nes-input\"\n        id={name}\n        name={name}\n        ref={ref}\n        {...props}\n      />\n    </div>\n  );\n});\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Mousetrap from \"mousetrap\";\n\nimport Container from \"./Container\";\n\nconst colors = [\n  \"#3BB273\",\n  \"#f44336\",\n  \"#4D9DE0\",\n  \"#7768AE\",\n  \"#6D676E\",\n  \"#b03060\",\n  \"#deb887\",\n  \"#ffd700\",\n  \"#ffb6c1\",\n  \"#ef6c00\"\n];\n\nconst Tile = styled(Container)`\n  width: 24px;\n  height: 24px;\n  background-color: ${props => props.value};\n  background-image: ${props =>\n    props.selected\n      ? ` repeating-linear-gradient(\n    45deg,\n    transparent,\n    transparent 10px,\n    #ccc 10px,\n    #ccc 20px\n  )`\n      : \"none\"};\n  margin: 8px;\n  outline: none;\n`;\n\nconst Root = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst ColorPicker = ({ className, onChange, name }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [focused, setFocus] = useState(false);\n  useEffect(() => {\n    onChange({ target: { name, value: colors[activeIndex] } });\n  }, [activeIndex]);\n\n  useEffect(() => {\n    if (focused) {\n      Mousetrap.bind(\"left\", () =>\n        setActiveIndex((activeIndex - 1 + colors.length) % colors.length)\n      );\n      Mousetrap.bind(\"right\", () =>\n        setActiveIndex((activeIndex + 1) % colors.length)\n      );\n\n      return () => {\n        Mousetrap.unbind(\"right\");\n        Mousetrap.unbind(\"left\");\n      };\n    }\n  }, [focused, activeIndex]);\n\n  return (\n    <Root\n      className={className}\n      tabIndex={0}\n      onFocus={() => setFocus(true)}\n      onBlur={() => setFocus(false)}\n    >\n      {colors.map((color, i) => (\n        <Tile\n          selected={i === activeIndex}\n          value={color}\n          onClick={() => setActiveIndex(i)}\n        />\n      ))}\n    </Root>\n  );\n};\n\nexport default ColorPicker;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Input from \"./common/Input\";\nimport ColorPicker from \"./common/ColorPicker\";\nimport Button from \"./common/Button\";\n\nconst Form = styled.form`\n  width: 450px;\n  display: flex;\n  flex-direction: column;\n\n  & .with-bottom-margin {\n    margin-bottom: 16px;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  \n  & > button {\n    margin-left: 8px;\n  }\n`;\n\nconst PlayerForm = ({ onCancel, onSubmit }) => {\n  const [values, setValue] = useState({});\n  const updateValue = (ev) => {\n    const { name, value } = ev.target;\n    setValue({ ...values, [name]: value });\n  };\n\n  return (\n    <Form\n      onSubmit={(ev) => {\n        ev.preventDefault();\n        onSubmit(values);\n      }}\n    >\n      <Input\n        className=\"with-bottom-margin\"\n        name=\"name\"\n        maxLength={10}\n        onChange={updateValue}\n        autoFocus\n      />\n      <ColorPicker\n        className=\"with-bottom-margin\"\n        onChange={updateValue}\n        name=\"color\"\n      />\n      <ButtonGroup>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button type=\"submit\">Add Player</Button>\n      </ButtonGroup>\n    </Form>\n  );\n};\n\nexport default PlayerForm;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"./common/Container\";\n\n\nconst CATEGORIES = [\n  { id: 9, name: \"General Knowledge\" },\n  { id: 10, name: \"Books\" },\n  { id: 11, name: \"Film\" },\n  { id: 12, name: \"Music\" },\n  { id: 13, name: \"Musicals & Theatres\" },\n  { id: 14, name: \"Television\" },\n  { id: 15, name: \"Video Games\" },\n  { id: 16, name: \"Board Games\" },\n  { id: 17, name: \"Science & Nature\" },\n  { id: 18, name: \"Computers\" },\n  { id: 19, name: \"Mathematics\" },\n  { id: 20, name: \"Mythology\" },\n  { id: 21, name: \"Sports\" },\n  { id: 22, name: \"Geography\" },\n  { id: 23, name: \"History\" },\n  { id: 24, name: \"Politics\" },\n  { id: 25, name: \"Art\" },\n  { id: 26, name: \"Celebrities\" },\n  { id: 27, name: \"Animals\" },\n  { id: 28, name: \"Vehicles\" },\n  { id: 29, name: \"Comics\" },\n  { id: 30, name: \"Gadgets\" },\n  { id: 31, name: \"Japanese Anime & Manga\" },\n  { id: 32, name: \"Cartoon & Animations\" }\n];\n\nconst Root = styled.div`\n  display: grid;\n  grid-template-rows: repeat(4, 10em);\n  grid-template-columns: repeat(6, 10em);\n  align-content: center;\n  justify-content: center;\n  grid-gap: 16px;\n  width: 100%;\n  height: 100%;\n  padding: 16px;\n\n  & a {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none;\n    text-align: center;\n    font-size: 10pt;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Label = ({ children: value }) => {\n  const index = value.indexOf(\"&\");\n\n  if (index > 0) {\n    const s1 = value.slice(0, index);\n    const s2 = value.slice(index, index + 1);\n    const s3 = value.slice(index + 1);\n\n    return (\n      <>\n        <div>{s1}</div>\n        <div>{s2}</div>\n        <div>{s3}</div>\n      </>\n    );\n  }\n  return <div>{value}</div>;\n};\nconst Catergories = () => {\n  return (\n    <Root>\n      {CATEGORIES.map(({ name, id }) => (\n        <Container rounded key={id}>\n          <Link to={`question/${id}`}>\n            <div>\n              <Label>{name}</Label>\n            </div>\n          </Link>\n        </Container>\n      ))}\n    </Root>\n  );\n};\n\nexport default Catergories;\n","import React, { useEffect, useRef, useState, useMemo } from \"react\";\n\n\nconst Timer = ({ className, value  }) => {\n  const startTime = useRef(Date.now() + value * 1000);\n  const [time, setTime] = useState(new Date());\n  const buffer = useMemo(() => new Date(), []);\n\n  const animate = () => {\n    const dt = startTime.current - Date.now();\n\n    if (dt > 0) {\n      setTime(dt);\n      requestAnimationFrame(animate);\n    }\n  };\n\n  useEffect(() => {\n    requestAnimationFrame(animate);\n  }, []);\n\n  buffer.setTime(time);\n\n  const minutes = buffer.getMinutes();\n  const seconds =  buffer.getSeconds();\n  let mPrefix = buffer.getMinutes() > 9 ? \"\" : \"0\" \n  let sPrefix = buffer.getSeconds() > 9 ? \"\" : \"0\" \n  return (\n    <div\n      className={className}\n    >{`${mPrefix}${minutes}:${sPrefix}${seconds}`}</div>\n  );\n};\n\nexport default Timer;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Root = styled.div`\n  font-size: 8px;\n  width: ${props => props.width || \"72px\"}\n`;\n\nconst Badge = ({ children, variant, width }) => {\n  return (\n    <Root className=\"nes-badge\" width={width}>\n      <span className={`is-${variant}`}>{children}</span>\n    </Root>\n  );\n};\n\nexport default Badge;\n","import React, { useState, useMemo } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useParams } from \"react-router\";\nimport gql from \"graphql-tag\";\nimport get from \"lodash/get\";\nimport shuffle from \"lodash/shuffle\";\nimport styled from \"@emotion/styled\";\nimport ent from \"ent\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"./common/Button\";\nimport Container, { Title } from \"./common/Container\";\nimport Timer from \"./Timer\";\nimport Badge from \"./common/Badge\";\n\nconst GET = gql`\n  query listQuestions {\n    questions(\n      amount: $amount\n      category: $category\n      type: $type\n      difficulty: $difficulty\n      token: $token\n    ) @rest(type: \"[Question]\", path: \"/api.php?{args}\") {\n      type\n      category\n      question\n      difficulty\n      correct_answer\n      incorrect_answers\n    }\n  }\n`;\n\nconst Root = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & .timer {\n    position: absolute;\n    top: 16px;\n    left: 50%;\n    transform: translate(-50%, 0);\n  }\n`;\n\nconst QuestionCard = styled(Container)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  && .title {\n    font-size: 16pt;\n  }\n  min-width: 600px;\n  max-width: 750px;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  margin-top: 32px;\n\n  & button:last-child {\n    margin-left: 16px;\n  }\n`;\n\nconst Choices = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  padding: 16px 0;\n  grid-gap: 16px;\n  visibility: ${(props) => props.visibility};\n`;\n\nconst Text = styled.div`\n  margin-top: 16px;\n`\n\nconst mergeQuestions = (prev, { fetchMoreResult }) => {\n  if (!prev) {\n    return fetchMoreResult;\n  } else if (fetchMoreResult) {\n    return {\n      ...prev,\n      questions: [...fetchMoreResult.questions, ...prev.questions],\n    };\n  } else {\n    return prev;\n  }\n};\n\nconst labels = {\n  boolean: \"true/false\",\n  multiple: \"multiple choice\",\n};\n\nconst Question = ({ difficulty, type, token }) => {\n  const { category } = useParams();\n  const variables = { amount: 1, category, difficulty, type, token };\n  const { data, loading } = useQuery(GET, {\n    variables,\n    fetchPolicy: \"network-only\",\n    fetchMoreResult: mergeQuestions,\n  });\n  const [state, setState] = useState(\"question\");\n  const [choicesVisibility, setChoicesVisibility] = useState(\"hidden\");\n  const question = get(data, \"questions.0.question\", \"\");\n  const answer = get(data, \"questions.0.correct_answer\", \"\");\n  const incorrectAnswers = get(data, \"questions.0.incorrect_answers\", []);\n\n  const choices = useMemo(() => shuffle([...incorrectAnswers, answer]), [\n    answer,\n  ]);\n\n  const history = useHistory();\n\n  return loading ? null : (\n    <Root>\n      <Timer value={120} className=\"timer\" />\n      <QuestionCard>\n        {state === \"question\" ? (\n          <>\n            <Title> Question </Title>\n            <Badge variant=\"dark\" width=\"175px\">{labels[type]}</Badge>\n            <Badge variant=\"warning\">{difficulty}</Badge>\n            <Text>{ent.decode(question)}</Text>\n\n            <Choices visibility={choicesVisibility}>\n              {choices.map((choice, index) => (\n                <div key={(10 + index).toString(36)}>{`${(10 + index).toString(\n                  36\n                )}) ${ent.decode(choice)}`}</div>\n              ))}\n            </Choices>\n            <ButtonGroup>\n              <Button\n                onClick={() =>\n                  choicesVisibility === \"hidden\"\n                    ? setChoicesVisibility(\"visible\")\n                    : setChoicesVisibility(\"hidden\")\n                }\n              >\n                {choicesVisibility === \"hidden\"\n                  ? \"Show options\"\n                  : \"Hide options\"}\n              </Button>\n              <Button variant=\"success\" onClick={() => setState(\"answer\")}>\n                View answer\n              </Button>\n            </ButtonGroup>\n          </>\n        ) : (\n          <>\n            <Title> Answer </Title>\n            {ent.decode(answer)}\n            <ButtonGroup>\n              <Button onClick={() => setState(\"question\")}>Back</Button>\n              <Button variant=\"primary\" onClick={() => history.goBack()}>\n                Next Turn\n              </Button>\n            </ButtonGroup>\n          </>\n        )}\n      </QuestionCard>\n    </Root>\n  );\n};\n\nexport default Question;\n","import { useEffect, useState, useMemo } from \"react\";\n\nconst useSessionStorage = (key, initialValue) => {\n  const [value, setValue] = useState();\n\n  \n\n  useEffect(() => {\n    try {\n      const string = sessionStorage.getItem(key);\n      const json = JSON.parse(string)\n      if (json) {\n        setValue(json);\n      } else {\n        setValue(initialValue);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  useEffect(() => {\n    try {\n      const string = JSON.stringify(value);\n      sessionStorage.setItem(key, string);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [value]);\n\n  console.log(value)\n  return [value, setValue];\n};\n\nexport default useSessionStorage;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst RadioGroup = ({ options, name, value, onChange }) => {\n  return (\n    <Root>\n      {options.map(option => (\n        <label key={option.value}>\n          <input\n            type=\"radio\"\n            class=\"nes-radio\"\n            name={name}\n            value={option.value}\n            checked={option.value === value}\n            onChange={onChange}\n          />\n          <span>{option.label}</span>\n        </label>\n      ))}\n    </Root>\n  );\n};\n\nexport default RadioGroup;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Button from \"./common/Button\";\nimport Container, { Title } from \"./common/Container\";\nimport RadioGroup from \"./common/RadioGroup\";\n\nconst Root = styled.div`\n  width: 600px;\n  & > * {\n    margin: 32px 0;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  & > button:last-child {\n    margin-left: 16px;\n  }\n`;\n\nconst Settings = ({ onCancel, onSave, values}) => {\n  const [difficulty, setDifficulty] = useState(values.difficulty);\n  const [type, setType] = useState(values.type);\n  return (\n    <Root>\n      <Container>\n        <Title>Difficulty</Title>\n        <RadioGroup\n          name=\"difficulty\"\n          onChange={e => setDifficulty(e.target.value)}\n          value={difficulty}\n          options={[\n            { label: \"Easy\", value: \"easy\" },\n            { label: \"Medium\", value: \"medium\" },\n            { label: \"Hard\", value: \"hard\" }\n          ]}\n        />\n      </Container>\n\n      <Container>\n        <Title>Question Type</Title>\n        <RadioGroup\n          name=\"type\"\n          onChange={e => setType(e.target.value)}\n          value={type}\n          options={[\n            { label: \"True/False\", value: \"boolean\" },\n            { label: \"Multiple Choice\", value: \"multiple\" }\n          ]}\n        />\n      </Container>\n\n      <ButtonGroup>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button onClick={() => onSave({ type, difficulty })}>Save</Button>\n      </ButtonGroup>\n    </Root>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Container, { Title } from \"./common/Container\";\nimport Button from \"./common/Button\";\nimport Player from \"./Player\";\nimport Dialog from \"./common/Dialog\";\nimport PlayerForm from \"./PlayerForm\";\nimport Categories from \"./Catergories\";\nimport Question from \"./Question\";\n\nimport useSessionStorage from \"./common/useSessionStorage\";\nimport Settings from \"./Settings\";\n\nconst Root = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  height: 100%;\n  position: relative;\n`;\n\nconst Sidebar = styled.div`\n  width: 400px;\n  padding: 16px;\n  heigh: 100%;\n  display: flex;\n  padding: 16px;\n  flex-direction: column;\n\n  & button {\n    margin: 16px 0;\n  }\n`;\n\nconst Players = styled(Container)`\n  flex: 1;\n`;\n\nconst ADD_PLAYER = gql`\n  mutation AddPlayer($id: Int!) {\n    addPlayer(id: $id, name: $name, color: $color) @client\n  }\n`;\n\nconst Game = () => {\n  const [selectedPlayer, selectPlayer] = useState([]);\n  const [dialogId, setDialogId] = useState(null);\n  const [players = [], setPlayers] = useSessionStorage(\"players\", []);\n  const [settings, setSettings] = useSessionStorage(\"settings\", {\n    difficulty: \"easy\",\n    type: \"multiple\",\n  });\n\n  // const [addPlayer] = useMutation(ADD_PLAYER);\n\n  return (\n    <Root>\n      <Sidebar>\n        <Players centered>\n          <Title>Players</Title>\n          {players.map((player) => (\n            <Player\n              key={player.name}\n              {...player}\n              selected={selectedPlayer === player}\n              onClick={() => selectPlayer(player)}\n            />\n          ))}\n          <Button onClick={() => setDialogId(\"add-player\")}>Add Player</Button>\n        </Players>\n        <Button variant=\"warning\">Reset</Button>\n        <Button variant=\"primary\" onClick={() => setDialogId(\"show-settings\")}>\n          Settings\n        </Button>\n      </Sidebar>\n      <Content>\n        <Switch>\n          <Route path=\"/\" exact component={Categories} />\n          <Route\n            path=\"/question/:category\"\n            render={() => <Question {...settings} />}\n          />\n        </Switch>\n      </Content>\n      <Dialog isOpen={dialogId === \"add-player\"}>\n        <PlayerForm\n          onCancel={() => setDialogId(null)}\n          onSubmit={(values) => {\n            setPlayers([...players, values]);\n            setDialogId(null);\n            // addPlayer({ variables: values });\n          }}\n        />\n      </Dialog>\n      <Dialog isOpen={dialogId === \"show-settings\"}>\n        <Settings\n          values={settings}\n          onCancel={() => setDialogId(null)}\n          onSave={(values) => {\n            setSettings(values);\n            setDialogId(null);\n          }}\n        />\n      </Dialog>\n    </Root>\n  );\n};\n\nexport default Game;\n","import React, { useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { RestLink } from \"apollo-link-rest\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport GA from \"react-ga\";\nimport \"nes.css/css/nes.min.css\";\n\nimport Game from \"./Game\";\nimport typeDefs from \"./schema\";\n// import addPlayer from './mutations/addPlayer';\n// import updateSettings from './mutations/updateSettings';\n\n// setup your `RestLink` with your endpoint\nconst link = new RestLink({\n  uri: \"https://opentdb.com\",\n  async responseTransformer(response) {\n    const { results } = await response.json();\n    return results;\n  },\n});\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: (object) => `${object.__typename}:${uuid()}`,\n});\n\n// setup your client\nconst client = new ApolloClient({\n  link,\n  cache,\n  connectToDevTools: true,\n  typeDefs,\n  // resolvers: {\n  //   Mutation: {\n  //     addPlayer,\n  //     updateSettings\n  //   }\n  // }\n});\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nconst App = () => {\n  useEffect(() => {\n    GA.pageview(\"/\");\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <ApolloProvider client={client}>\n        <Root>\n          <Game />\n        </Root>\n      </ApolloProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","export default `\n    type Question {\n        question: String!\n        category: String!\n        correct_answer: String!\n        difficulty: String!\n        incorrect_answers: [String]!\n        question: String!\n        type: String!\n    }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GA from 'react-ga';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nGA.initialize(\"UA-165041784-1\");\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}